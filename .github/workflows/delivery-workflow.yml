name: CI delivery 2025

on:
  push:
  pull_request:

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Maven
        run: sudo apt update && sudo apt install -y maven

      - name: Extract version from pom.xml
        id: versioning
        run: |
          cd ./src/tp-devops-correction-docker/simple-api
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push images
        run: |
          for service in simple-api database http-server devops-front-main; do
            docker build -t ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-${service}:${{ env.VERSION }} -t ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-${service}:latest ./src/tp-devops-correction-docker/$service
            if [ "$GITHUB_REF" == "refs/heads/main" ]; then
              docker push ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-${service}:${{ env.VERSION }}
              docker push ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-${service}:latest
            fi
          done

      - name: Install Ansible
        run: sudo apt install -y ansible

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ID_RSA }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          

      - name: Run Ansible Playbook
        run: sudo ansible-playbook -i ansible/inventories/setup.yml ansible/launch.yml

  cancel-pr-on-failure:
    needs: [build-and-push-docker-image]
    if: failure()
    runs-on: ubuntu-22.04
    steps:
      - name: Close PR on Failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=$(jq --raw-output .pull_request.number < "$GITHUB_EVENT_PATH")
          echo "Closing PR #$pr_number due to pipeline failure"
          curl -X PATCH \
               -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number \
               -d '{"state":"closed"}'
